
# non-spatial query

SELECT count(rd.osm_id)
FROM ("import.osm_roads") as rd,
     cb_2016_us_county_500k as county
WHERE within(ST_PointN(ST_Transform(rd.geometry,4326),1), county.geometry) and county.name="Washtenaw"


# spatial query

SELECT COUNT(rd.osm_id) as count
FROM "import.osm_roads" as rd,
cb_2016_us_county_500k as county
WHERE rd.ROWID IN (
    SELECT ROWID
    FROM SpatialIndex
    WHERE f_table_name = 'import.osm_roads' AND f_geometry_column = 'GEOMETRY' AND
        search_frame = ST_Transform(ST_Envelope(SetSRID(county.geometry, 4326)), 3857) AND county.name="Washtenaw") 



# spatial query works!
SELECT COUNT(osm_id)
FROM
(
SELECT rd.osm_id as osm_id, rd.geometry as geometry, county.geometry as ctgeometry
FROM "import.osm_roads" as rd,
cb_2016_us_county_500k as county
WHERE rd.ROWID IN (
    SELECT ROWID
    FROM SpatialIndex
    WHERE f_table_name = 'import.osm_roads' AND f_geometry_column = 'GEOMETRY' AND
        search_frame = ST_Transform(ST_Envelope(SetSRID(county.geometry, 4326)), 3857) AND county.name="Washtenaw")
)
WHERE within(ST_PointN(ST_Transform(geometry,4326),1), ctgeometry)



# create a new table 

CREATE TABLE county_tunnel AS
SELECT tunnel, name, ctgeometry
FROM
(
SELECT rd.osm_id as osm_id, rd.geometry as geometry, rd.tunnel as tunnel, county.name as name, county.geometry as ctgeometry
FROM "import.osm_roads" as rd,
cb_2016_us_county_500k as county
WHERE rd.ROWID IN (
    SELECT ROWID
    FROM SpatialIndex
    WHERE f_table_name = 'import.osm_roads' AND f_geometry_column = 'GEOMETRY' AND
        search_frame = ST_Transform(ST_Envelope(SetSRID(county.geometry, 4326)), 3857))
)
WHERE within(ST_PointN(ST_Transform(geometry,4326),1), ctgeometry)


# count number of tunnels
SELECT COUNT(*)
FROM
(
SELECT tunnel as T, name as N, SetSRID(ctgeometry, 4326) as Geom
FROM
(	
	SELECT rd.osm_id as osm_id, rd.geometry as geometry, rd.tunnel as tunnel, county.name as name, county.geometry as ctgeometry
	FROM "import.osm_roads" as rd,
	     cb_2016_us_county_500k as county
	WHERE rd.ROWID IN (
    		SELECT ROWID
    		FROM SpatialIndex
    		WHERE f_table_name = 'import.osm_roads' AND f_geometry_column = 'GEOMETRY' AND
        	      search_frame = ST_Transform(ST_Envelope(SetSRID(county.geometry, 4326)), 3857))
)
WHERE within(ST_PointN(ST_Transform(geometry,4326),1), ctgeometry)
)
Where T!=''
GROUP By N




# create all USA tunnel data

SELECT sum(num) as num_tunnel, name as county_name, Geom as geometry
FROM 
(
	SELECT COUNT(*) as num, N as name, Geom
	FROM
	(
	SELECT tunnel as T, name as N, SetSRID(ctgeometry, 4326) as Geom
	FROM
	(	
		SELECT rd.osm_id as osm_id, rd.geometry as geometry, rd.tunnel as tunnel, county.name as name, county.geometry as ctgeometry
		FROM "import.osm_roads" as rd,
	     	cb_2016_us_county_500k as county
		WHERE rd.ROWID IN (
    			SELECT ROWID
    			FROM SpatialIndex
    			WHERE f_table_name = 'import.osm_roads' AND f_geometry_column = 'GEOMETRY' AND
        	      	search_frame = ST_Transform(ST_Envelope(SetSRID(county.geometry, 4326)), 3857))
	)
	WHERE within(ST_EndPoint(ST_Transform(geometry,4326)), ctgeometry) or within(ST_StartPoint(ST_Transform(geometry,4326)), ctgeometry)
	)
	Where T!=''
	GROUP By Geom
	UNION ALL
	SELECT 0 as num, county.name as name, geometry as Geom
	FROM cb_2016_us_county_500k as county
)t

GROUP By Geom

# save to a new table

CREATE TABLE county_tunnel
AS
SELECT sum(num) as num_tunnel, name as county_name, Geom as geometry
FROM 
(
	SELECT COUNT(*) as num, N as name, Geom
	FROM
	(
	SELECT tunnel as T, name as N, SetSRID(ctgeometry, 4326) as Geom
	FROM
	(	
		SELECT rd.osm_id as osm_id, rd.geometry as geometry, rd.tunnel as tunnel, county.name as name, county.geometry as ctgeometry
		FROM "import.osm_roads" as rd,
	     	cb_2016_us_county_500k as county
		WHERE rd.ROWID IN (
    			SELECT ROWID
    			FROM SpatialIndex
    			WHERE f_table_name = 'import.osm_roads' AND f_geometry_column = 'GEOMETRY' AND
        	      	search_frame = ST_Transform(ST_Envelope(SetSRID(county.geometry, 4326)), 3857))
	)
	WHERE within(ST_PointN(ST_Transform(geometry,4326),1), ctgeometry)
	)
	Where T!=''
	GROUP By Geom
	UNION ALL
	SELECT 0 as num, county.name as name, geometry as Geom
	FROM cb_2016_us_county_500k as county
)t

GROUP By Geom

# compute area

SELECT ST_Area(ST_Transform(ct.geometry,2249)) * POWER(0.3048,2)* POWER(0.000621371,2) as sqmile, ct.geometry as Geom
FROM cb_2016_us_county_500k as ct

# add tunnel dense

SELECT tunnel.num_tunnel/ area.sqmile as tunnel_dense, tunnel.num_tunnel, tunnel.county_name, tunnel.geometry
FROM
(
SELECT sum(num) as num_tunnel, name as county_name, Geom as geometry
FROM 
(
	SELECT COUNT(*) as num, N as name, Geom
	FROM
	(
		SELECT tunnel as T, name as N, SetSRID(ctgeometry, 4326) as Geom
		FROM
		(	
			SELECT rd.osm_id as osm_id, rd.geometry as geometry, rd.tunnel as tunnel, county.name as name, county.geometry as ctgeometry
			FROM "import.osm_roads" as rd,
		     	cb_2016_us_county_500k as county
			WHERE rd.ROWID IN (
	    			SELECT ROWID
	    			FROM SpatialIndex
	    			WHERE f_table_name = 'import.osm_roads' AND f_geometry_column = 'GEOMETRY' AND
			      	search_frame = ST_Transform(ST_Envelope(SetSRID(county.geometry, 4326)), 3857)
			)
		)
		WHERE within(ST_EndPoint(ST_Transform(geometry,4326)), ctgeometry) or within(ST_StartPoint(ST_Transform(geometry,4326)), ctgeometry)
	)
	Where T!=''
	GROUP By Geom
	UNION ALL
	SELECT 0 as num, county.name as name, geometry as Geom
	FROM cb_2016_us_county_500k as county
)t
GROUP By Geom
) as tunnel,
(
SELECT ST_Area(ST_Transform(ct.geometry,2249)) * POWER(0.3048,2)* POWER(0.000621371,2) as sqmile, ct.geometry as Geom
FROM cb_2016_us_county_500k as ct
)as area
WHERE tunnel.geometry=area.Geom


# CREATE A COUNTY ACCIDENT TABLE 


CREATE TABLE county_accident
AS
SELECT count(*) as num_accident, ct_Geom as geometry
FROM(	
	SELECT ac_Geom as acGeom, ct_Geom as ct_Geom
	FROM(
		SELECT ac.geometry as ac_Geom, ct.geometry as ct_Geom
		FROM county_tunnel_info as ct,
     	     	     Fatal_Motor_Vehicle_Accidents as ac
		WHERE ac.ROWID IN(
			SELECT ROWID
			FROM SpatialIndex
			WHERE f_table_name = 'Fatal_Motor_Vehicle_Accidents' AND f_geometry_column = 'GEOMETRY' AND
		      	      search_frame = ST_Envelope(SetSRID(ct.geometry, 4326))
		)
	)
	WHERE within(ac_Geom, ct_Geom)
)
GROUP By geometry




# CREATE COUNTY ACCIDENT TABLE 

CREATE TABLE county_accident
AS
SELECT ROWID, sum(num_accident) as num_accident, geometry as geometry
FROM 
(
SELECT ROWID, count(*) as num_accident, ct_Geom as geometry
FROM(	
	SELECT ROWID, ac_Geom as acGeom, ct_Geom as ct_Geom
	FROM(
		SELECT ct.ROWID, ac.geometry as ac_Geom, ct.geometry as ct_Geom
		FROM county_tunnel_info as ct,
     	     	     Fatal_Motor_Vehicle_Accidents as ac
		WHERE ac.ROWID IN(
			SELECT ROWID
			FROM SpatialIndex
			WHERE f_table_name = 'Fatal_Motor_Vehicle_Accidents' AND f_geometry_column = 'GEOMETRY' AND
		      	      search_frame = ST_Envelope(SetSRID(ct.geometry, 4326))
		)
	)
	WHERE within(ac_Geom, ct_Geom)
)
GROUP By geometry
UNION ALL
SELECT ROWID, 0 as num_accident, geometry as geometry
FROM cb_2016_us_county_500k as county
)t
GROUP By geometry




# QUERY ROAD where ACCIDENT happens

CREATE TABLE road_accident
AS
SELECT *, min(distance)
FROM(
SELECT *, ST_Distance(ST_Transform(rd.geometry, 4326),ac.geometry) as distance
FROM ('import.osm_roads') as rd,
     Fatal_Motor_Vehicle_Accidents as ac
WHERE ac.ROWID IN(
	SELECT ROWID
	FROM SpatialIndex
	WHERE f_table_name = 'Fatal_Motor_Vehicle_Accidents' AND f_geometry_column = 'GEOMETRY' AND
	      search_frame = ST_Envelope(ST_Transform(rd.geometry, 4326))
)
)
Group by PK_UID


# for IOWA
CREATE TABLE IOWA_road_accident
AS
SELECT *, min(distance)
FROM(
SELECT *, ST_Distance(ST_Transform(rd.geometry, 4326),ac.geometry) as distance
FROM iowa_osm as rd,
     IOWA_Crash_Data as ac
WHERE ac.ROWID IN(
	SELECT ROWID
	FROM SpatialIndex
	WHERE f_table_name = 'IOWA_Crash_Data' AND f_geometry_column = 'GEOMETRY' AND
	      search_frame = ST_Envelope(ST_Transform(rd.geometry, 4326))
)
)
Group by PK_UID

# match OSM road with AADT road
CREATE TABLE osm_traffic
AS
SELECT *, MIN(distance)
FROM 
(
SELECT *, ST_Distance(AADT2016.geometry,osm.geometry) as distance
FROM michigan_road_osm as osm,
     2016_Traffic_Volumes as AADT2016
WHERE osm.ROWID IN(
	SELECT ROWID
	FROM SpatialIndex
	WHERE f_table_name = 'michigan_road_osm' AND f_geometry_column = 'GEOMETRY' AND
	      search_frame = ST_Envelope(AADT2016.geometry)
)

)
GROUP BY id

# match two AADT data from different years
SELECT *
FROM
(
SELECT AADT2016.rowid as ID, AADT2015.geometry as geom2015, AADT2016.geometry as geom2016
FROM "2016_Traffic_Volumes" as AADT2016,
	"2015_Traffic_Volumes" as AADT2015
WHERE AADT2015.ROWID IN(
	SELECT ROWID
	FROM SpatialIndex
	WHERE f_table_name = '2015_Traffic_Volumes' AND f_geometry_column = 'GEOMETRY' AND
	      search_frame = ST_Envelope(AADT2016.geometry)
)
)
WHERE Equals(geom2015, geom2016)

SELECT id AS osm_id, GEOMETRY AS osm_geom, GEOMETRY:1 AS AADT_geom, AadtRiybde AS AADT, CaadtRound AS CAADT
FROM osm_traffic
WHERE within(osm_geom, AADT_geom) or within(AADT_geom, osm_geom) or overlaps(AADT_geom, osm_geom) or covers(AADT_geom, osm_geom) or covers(osm_geom, AADT_geom)








SELECT Distance(ST_Transform(end1,26915), ST_Transform(AADT_geom,26915)) as distance1, Distance(ST_Transform(end2,26915), ST_Transform(AADT_geom,26915)) as distance2
FROM 
(
SELECT StartPoint(Geometry) as end1, EndPoint(Geometry) as end2, "Geometry:1" as AADT_geom
FROM osm_traffic
)

